class crawl: 				#->html url id
class IndexBuilder:
	def __init__()
	def process(html,url,id)        # return 
	def save() 			# ->file
class Parser:
	def normalize(str)		#return [str,st...]
class searcher:
	def __init__(fileName)
	def search(wordlist)		#return [url,url...]
class server:
	def display(urlist,itemlist)    #return [head..] [abstract..]

file:
	urllist
		the number of urls
		一行存一条记录：
		urlid url indegree outdegree length_of_texts
	
	invertedindex
		store a dictionary, which structure is below

{
    'term':
        [
            df=0,   #document frequency
            {   #urlid-record dictionary
                urlid:  #   a record
                    [
                        tf=0,   #term frequency
                        tf_idf=0,    #normalized tf-idf
                    ],
                urlid:  #   Another record
                    [
                        tf=0,
                        tf_idf=0
                    ]
                ...
            },
            cf  #collection frequency, total number of this term in the whole collection
        ]
    'Another term':
        [
            ...
        ],
    ...
}
